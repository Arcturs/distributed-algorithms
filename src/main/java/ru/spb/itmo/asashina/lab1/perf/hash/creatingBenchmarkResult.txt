/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49891:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/a.sashina/IdeaProjects/distributed-algorithms/target/classes:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/a.sashina/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/a.sashina/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/Users/a.sashina/.m2/repository/org/jeasy/easy-random-core/5.0.0/easy-random-core-5.0.0.jar:/Users/a.sashina/.m2/repository/org/objenesis/objenesis/3.1/objenesis-3.1.jar:/Users/a.sashina/.m2/repository/io/github/classgraph/classgraph/4.8.90/classgraph-4.8.90.jar ru.spb.itmo.asashina.lab1.perf.hash.CreatingBenchmarkRunner
# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49891:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.perf.hash.CreatingBenchmarkRunner.insertHundredThousandRandomData

# Run progress: 0,00% complete, ETA 00:01:57
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 2,181 ms/op
# Warmup Iteration   2: 3,880 ms/op
# Warmup Iteration   3: 7,183 ms/op
Iteration   1: 10,041 ms/op
Iteration   2: 16,554 ms/op
Iteration   3: 20,643 ms/op
Iteration   4: 22,623 ms/op
Iteration   5: 29,950 ms/op
Iteration   6: 34,108 ms/op
Iteration   7: 41,604 ms/op
Iteration   8: 50,802 ms/op
Iteration   9: 50,015 ms/op
Iteration  10: 52,766 ms/op

# Run progress: 11,11% complete, ETA 00:01:52
# Fork: 1 of 2
# Warmup Iteration   1: 2,201 ms/op
# Warmup Iteration   2: 4,850 ms/op
# Warmup Iteration   3: 7,815 ms/op
Iteration   1: 12,054 ms/op
Iteration   2: 17,085 ms/op
Iteration   3: 21,264 ms/op
Iteration   4: 23,469 ms/op
Iteration   5: 33,200 ms/op
Iteration   6: 34,255 ms/op
Iteration   7: 46,362 ms/op
Iteration   8: 50,916 ms/op
Iteration   9: 54,144 ms/op
Iteration  10: 60,394 ms/op

# Run progress: 22,22% complete, ETA 00:01:38
# Fork: 2 of 2
# Warmup Iteration   1: 2,661 ms/op
# Warmup Iteration   2: 4,362 ms/op
# Warmup Iteration   3: 7,313 ms/op
Iteration   1: 10,381 ms/op
Iteration   2: 22,310 ms/op
Iteration   3: 20,472 ms/op
Iteration   4: 27,525 ms/op
Iteration   5: 29,066 ms/op
Iteration   6: 39,574 ms/op
Iteration   7: 45,787 ms/op
Iteration   8: 47,766 ms/op
Iteration   9: 53,494 ms/op
Iteration  10: 63,109 ms/op


Result "ru.spb.itmo.asashina.lab1.perf.hash.CreatingBenchmarkRunner.insertHundredThousandRandomData":
  35,631 ±(99.9%) 14,171 ms/op [Average]
  (min, avg, max) = (10,381, 35,631, 63,109), stdev = 16,320
  CI (99.9%): [21,460, 49,803] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49891:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.perf.hash.CreatingBenchmarkRunner.insertMillionRandomData

# Run progress: 33,33% complete, ETA 00:01:23
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 723,541 ms/op
# Warmup Iteration   2: 1438,895 ms/op
# Warmup Iteration   3: 2172,487 ms/op
Iteration   1: 2717,814 ms/op
Iteration   2: 3809,744 ms/op
Iteration   3: 4641,100 ms/op
Iteration   4: 5682,288 ms/op
Iteration   5: 6133,135 ms/op
Iteration   6: 6534,451 ms/op
Iteration   7: 7642,358 ms/op
Iteration   8: 9617,686 ms/op
Iteration   9: 8850,194 ms/op
Iteration  10: 11646,335 ms/op

# Run progress: 44,44% complete, ETA 00:02:29
# Fork: 1 of 2
# Warmup Iteration   1: 701,172 ms/op
# Warmup Iteration   2: 1451,188 ms/op
# Warmup Iteration   3: 2195,091 ms/op
Iteration   1: 2852,844 ms/op
Iteration   2: 3832,778 ms/op
Iteration   3: 4521,647 ms/op
Iteration   4: 5629,831 ms/op
Iteration   5: 6343,275 ms/op
Iteration   6: 6534,958 ms/op
Iteration   7: 7790,693 ms/op
Iteration   8: 9626,032 ms/op
Iteration   9: 9012,192 ms/op
Iteration  10: 10188,856 ms/op

# Run progress: 55,56% complete, ETA 00:02:37
# Fork: 2 of 2
# Warmup Iteration   1: 722,764 ms/op
# Warmup Iteration   2: 1465,570 ms/op
# Warmup Iteration   3: 2244,212 ms/op
Iteration   1: 2854,766 ms/op
Iteration   2: 3856,975 ms/op
Iteration   3: 4605,114 ms/op
Iteration   4: 5513,357 ms/op
Iteration   5: 6242,791 ms/op
Iteration   6: 6988,835 ms/op
Iteration   7: 7745,016 ms/op
Iteration   8: 8660,695 ms/op
Iteration   9: 10479,139 ms/op
Iteration  10: 11148,683 ms/op


Result "ru.spb.itmo.asashina.lab1.perf.hash.CreatingBenchmarkRunner.insertMillionRandomData":
  6721,424 ±(99.9%) 2220,985 ms/op [Average]
  (min, avg, max) = (2852,844, 6721,424, 11148,683), stdev = 2557,690
  CI (99.9%): [4500,439, 8942,409] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49891:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.perf.hash.CreatingBenchmarkRunner.insertTenThousandRandomData

# Run progress: 66,67% complete, ETA 00:02:17
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 2,215 ms/op
# Warmup Iteration   2: 4,719 ms/op
# Warmup Iteration   3: 7,289 ms/op
Iteration   1: 11,237 ms/op
Iteration   2: 17,766 ms/op
Iteration   3: 19,499 ms/op
Iteration   4: 27,100 ms/op
Iteration   5: 31,911 ms/op
Iteration   6: 35,647 ms/op
Iteration   7: 43,728 ms/op
Iteration   8: 48,764 ms/op
Iteration   9: 53,560 ms/op
Iteration  10: 53,823 ms/op

# Run progress: 77,78% complete, ETA 00:01:22
# Fork: 1 of 2
# Warmup Iteration   1: 2,460 ms/op
# Warmup Iteration   2: 4,661 ms/op
# Warmup Iteration   3: 7,726 ms/op
Iteration   1: 10,789 ms/op
Iteration   2: 18,121 ms/op
Iteration   3: 21,032 ms/op
Iteration   4: 24,411 ms/op
Iteration   5: 28,119 ms/op
Iteration   6: 37,052 ms/op
Iteration   7: 41,007 ms/op
Iteration   8: 47,283 ms/op
Iteration   9: 48,593 ms/op
Iteration  10: 53,583 ms/op

# Run progress: 88,89% complete, ETA 00:00:37
# Fork: 2 of 2
# Warmup Iteration   1: 2,877 ms/op
# Warmup Iteration   2: 4,615 ms/op
# Warmup Iteration   3: 8,619 ms/op
Iteration   1: 10,665 ms/op
Iteration   2: 17,124 ms/op
Iteration   3: 19,676 ms/op
Iteration   4: 23,639 ms/op
Iteration   5: 30,788 ms/op
Iteration   6: 35,008 ms/op
Iteration   7: 42,903 ms/op
Iteration   8: 47,487 ms/op
Iteration   9: 51,053 ms/op
Iteration  10: 59,458 ms/op


Result "ru.spb.itmo.asashina.lab1.perf.hash.CreatingBenchmarkRunner.insertTenThousandRandomData":
  33,389 ±(99.9%) 13,007 ms/op [Average]
  (min, avg, max) = (10,665, 33,389, 59,458), stdev = 14,978
  CI (99.9%): [20,383, 46,396] (assumes normal distribution)


# Run complete. Total time: 00:05:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                Mode  Cnt     Score      Error  Units
CreatingBenchmarkRunner.insertHundredThousandRandomData  avgt   20    35,631 ±   14,171  ms/op
CreatingBenchmarkRunner.insertMillionRandomData          avgt   20  6721,424 ± 2220,985  ms/op
CreatingBenchmarkRunner.insertTenThousandRandomData      avgt   20    33,389 ±   13,007  ms/op

Process finished with exit code 0