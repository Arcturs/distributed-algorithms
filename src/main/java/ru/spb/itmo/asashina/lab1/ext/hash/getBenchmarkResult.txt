/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=58073:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/a.sashina/IdeaProjects/distributed-algorithms/target/classes:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/a.sashina/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/a.sashina/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/Users/a.sashina/.m2/repository/org/jeasy/easy-random-core/5.0.0/easy-random-core-5.0.0.jar:/Users/a.sashina/.m2/repository/org/objenesis/objenesis/3.1/objenesis-3.1.jar:/Users/a.sashina/.m2/repository/io/github/classgraph/classgraph/4.8.90/classgraph-4.8.90.jar ru.spb.itmo.asashina.lab1.ext.hash.GetBenchmarkRunner
# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=58073:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.ext.hash.GetBenchmarkRunner.getHundredThousandValues

# Run progress: 0,00% complete, ETA 00:01:57
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 2159,963 ms/op
# Warmup Iteration   2: 5391,258 ms/op
# Warmup Iteration   3: 4141,650 ms/op
Iteration   1: 2067,915 ms/op
Iteration   2: 4510,047 ms/op
Iteration   3: 5048,027 ms/op
Iteration   4: 4760,645 ms/op
Iteration   5: 4020,446 ms/op
Iteration   6: 4401,264 ms/op
Iteration   7: 4435,914 ms/op
Iteration   8: 4545,088 ms/op
Iteration   9: 4352,029 ms/op
Iteration  10: 5024,219 ms/op

# Run progress: 11,11% complete, ETA 00:07:27
# Fork: 1 of 2
# Warmup Iteration   1: 2018,021 ms/op
# Warmup Iteration   2: 4410,682 ms/op
# Warmup Iteration   3: 3942,636 ms/op
Iteration   1: 1820,027 ms/op
Iteration   2: 4569,909 ms/op
Iteration   3: 3484,894 ms/op
Iteration   4: 5329,391 ms/op
Iteration   5: 4940,434 ms/op
Iteration   6: 4336,332 ms/op
Iteration   7: 4120,717 ms/op
Iteration   8: 4937,081 ms/op
Iteration   9: 4517,331 ms/op
Iteration  10: 2432,786 ms/op

# Run progress: 22,22% complete, ETA 00:06:17
# Fork: 2 of 2
# Warmup Iteration   1: 1894,826 ms/op
# Warmup Iteration   2: 4479,029 ms/op
# Warmup Iteration   3: 4167,264 ms/op
Iteration   1: 4249,986 ms/op
Iteration   2: 3228,484 ms/op
Iteration   3: 3992,077 ms/op
Iteration   4: 4712,630 ms/op
Iteration   5: 4280,990 ms/op
Iteration   6: 5033,441 ms/op
Iteration   7: 4532,249 ms/op
Iteration   8: 4245,348 ms/op
Iteration   9: 4107,458 ms/op
Iteration  10: 4143,422 ms/op


Result "ru.spb.itmo.asashina.lab1.ext.hash.GetBenchmarkRunner.getHundredThousandValues":
  4150,749 ±(99.9%) 744,258 ms/op [Average]
  (min, avg, max) = (1820,027, 4150,749, 5329,391), stdev = 857,088
  CI (99.9%): [3406,492, 4895,007] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=58073:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.ext.hash.GetBenchmarkRunner.getSevenThousandValues

# Run progress: 33,33% complete, ETA 00:05:24
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 286,615 ms/op
# Warmup Iteration   2: 286,760 ms/op
# Warmup Iteration   3: 247,885 ms/op
Iteration   1: 135,413 ms/op
Iteration   2: 256,795 ms/op
Iteration   3: 244,895 ms/op
Iteration   4: 291,316 ms/op
Iteration   5: 288,340 ms/op
Iteration   6: 297,290 ms/op
Iteration   7: 293,885 ms/op
Iteration   8: 190,543 ms/op
Iteration   9: 298,618 ms/op
Iteration  10: 254,864 ms/op

# Run progress: 44,44% complete, ETA 00:03:42
# Fork: 1 of 2
# Warmup Iteration   1: 266,623 ms/op
# Warmup Iteration   2: 257,993 ms/op
# Warmup Iteration   3: 248,947 ms/op
Iteration   1: 138,461 ms/op
Iteration   2: 289,642 ms/op
Iteration   3: 269,804 ms/op
Iteration   4: 300,182 ms/op
Iteration   5: 291,754 ms/op
Iteration   6: 258,714 ms/op
Iteration   7: 265,372 ms/op
Iteration   8: 158,067 ms/op
Iteration   9: 301,891 ms/op
Iteration  10: 301,237 ms/op

# Run progress: 55,56% complete, ETA 00:02:34
# Fork: 2 of 2
# Warmup Iteration   1: 279,002 ms/op
# Warmup Iteration   2: 274,150 ms/op
# Warmup Iteration   3: 285,314 ms/op
Iteration   1: 150,457 ms/op
Iteration   2: 245,747 ms/op
Iteration   3: 274,973 ms/op
Iteration   4: 317,147 ms/op
Iteration   5: 298,047 ms/op
Iteration   6: 329,076 ms/op
Iteration   7: 280,486 ms/op
Iteration   8: 252,139 ms/op
Iteration   9: 255,010 ms/op
Iteration  10: 270,655 ms/op


Result "ru.spb.itmo.asashina.lab1.ext.hash.GetBenchmarkRunner.getSevenThousandValues":
  262,443 ±(99.9%) 46,575 ms/op [Average]
  (min, avg, max) = (138,461, 262,443, 329,076), stdev = 53,635
  CI (99.9%): [215,868, 309,018] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=58073:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.ext.hash.GetBenchmarkRunner.getTwentyThousandValues

# Run progress: 66,67% complete, ETA 00:01:44
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 281,382 ms/op
# Warmup Iteration   2: 260,334 ms/op
# Warmup Iteration   3: 255,479 ms/op
Iteration   1: 202,862 ms/op
Iteration   2: 275,628 ms/op
Iteration   3: 287,175 ms/op
Iteration   4: 283,701 ms/op
Iteration   5: 281,836 ms/op
Iteration   6: 282,249 ms/op
Iteration   7: 284,331 ms/op
Iteration   8: 185,999 ms/op
Iteration   9: 281,429 ms/op
Iteration  10: 305,024 ms/op

# Run progress: 77,78% complete, ETA 00:01:04
# Fork: 1 of 2
# Warmup Iteration   1: 316,710 ms/op
# Warmup Iteration   2: 266,565 ms/op
# Warmup Iteration   3: 264,831 ms/op
Iteration   1: 170,191 ms/op
Iteration   2: 247,172 ms/op
Iteration   3: 312,515 ms/op
Iteration   4: 274,906 ms/op
Iteration   5: 299,893 ms/op
Iteration   6: 260,390 ms/op
Iteration   7: 283,184 ms/op
Iteration   8: 205,833 ms/op
Iteration   9: 276,728 ms/op
Iteration  10: 258,435 ms/op

# Run progress: 88,89% complete, ETA 00:00:30
# Fork: 2 of 2
# Warmup Iteration   1: 280,931 ms/op
# Warmup Iteration   2: 302,629 ms/op
# Warmup Iteration   3: 283,948 ms/op
Iteration   1: 137,781 ms/op
Iteration   2: 278,850 ms/op
Iteration   3: 259,022 ms/op
Iteration   4: 271,215 ms/op
Iteration   5: 255,357 ms/op
Iteration   6: 263,438 ms/op
Iteration   7: 253,677 ms/op
Iteration   8: 207,641 ms/op
Iteration   9: 297,792 ms/op
Iteration  10: 280,943 ms/op


Result "ru.spb.itmo.asashina.lab1.ext.hash.GetBenchmarkRunner.getTwentyThousandValues":
  254,748 ±(99.9%) 37,854 ms/op [Average]
  (min, avg, max) = (137,781, 254,748, 312,515), stdev = 43,592
  CI (99.9%): [216,895, 292,602] (assumes normal distribution)


# Run complete. Total time: 00:04:15

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                    Mode  Cnt     Score     Error  Units
GetBenchmarkRunner.getHundredThousandValues  avgt   20  4150,749 ± 744,258  ms/op
GetBenchmarkRunner.getSevenThousandValues    avgt   20   262,443 ±  46,575  ms/op
GetBenchmarkRunner.getTwentyThousandValues   avgt   20   254,748 ±  37,854  ms/op

Process finished with exit code 0