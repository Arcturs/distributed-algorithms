/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49570:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/a.sashina/IdeaProjects/distributed-algorithms/target/classes:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/a.sashina/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/a.sashina/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/Users/a.sashina/.m2/repository/org/jeasy/easy-random-core/5.0.0/easy-random-core-5.0.0.jar:/Users/a.sashina/.m2/repository/org/objenesis/objenesis/3.1/objenesis-3.1.jar:/Users/a.sashina/.m2/repository/io/github/classgraph/classgraph/4.8.90/classgraph-4.8.90.jar ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner
# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49570:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertHundredThousandRandomData

# Run progress: 0,00% complete, ETA 00:01:57
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 13,045 ns/op
# Warmup Iteration   2: 8,237 ns/op
# Warmup Iteration   3: 5,748 ns/op
Iteration   1: 6,029 ns/op
Iteration   2: 6,978 ns/op
Iteration   3: 6,260 ns/op
Iteration   4: 9,471 ns/op
Iteration   5: 6,399 ns/op
Iteration   6: 6,010 ns/op
Iteration   7: 7,947 ns/op
Iteration   8: 5,979 ns/op
Iteration   9: 6,858 ns/op
Iteration  10: 6,792 ns/op

# Run progress: 11,11% complete, ETA 00:12:09
# Fork: 1 of 2
# Warmup Iteration   1: 13,569 ns/op
# Warmup Iteration   2: 7,039 ns/op
# Warmup Iteration   3: 7,424 ns/op
Iteration   1: 6,913 ns/op
Iteration   2: 7,477 ns/op
Iteration   3: 6,747 ns/op
Iteration   4: 6,565 ns/op
Iteration   5: 7,943 ns/op
Iteration   6: 7,110 ns/op
Iteration   7: 9,159 ns/op
Iteration   8: 6,699 ns/op
Iteration   9: 7,974 ns/op
Iteration  10: 8,968 ns/op

# Run progress: 22,22% complete, ETA 00:10:55
# Fork: 2 of 2
# Warmup Iteration   1: 13,996 ns/op
# Warmup Iteration   2: 10,084 ns/op
# Warmup Iteration   3: 7,213 ns/op
Iteration   1: 6,838 ns/op
Iteration   2: 7,007 ns/op
Iteration   3: 8,320 ns/op
Iteration   4: 8,081 ns/op
Iteration   5: 6,720 ns/op
Iteration   6: 7,017 ns/op
Iteration   7: 9,439 ns/op
Iteration   8: 7,213 ns/op
Iteration   9: 9,045 ns/op
Iteration  10: 7,641 ns/op


Result "ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertHundredThousandRandomData":
  7,644 ±(99.9%) 0,804 ns/op [Average]
  (min, avg, max) = (6,565, 7,644, 9,439), stdev = 0,926
  CI (99.9%): [6,840, 8,448] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49570:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertTenThousandRandomData

# Run progress: 33,33% complete, ETA 00:09:33
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 9,043 ns/op
# Warmup Iteration   2: 6,825 ns/op
# Warmup Iteration   3: 7,076 ns/op
Iteration   1: 5,899 ns/op
Iteration   2: 6,118 ns/op
Iteration   3: 5,866 ns/op
Iteration   4: 5,902 ns/op
Iteration   5: 6,300 ns/op
Iteration   6: 7,158 ns/op
Iteration   7: 7,193 ns/op
Iteration   8: 7,183 ns/op
Iteration   9: 6,720 ns/op
Iteration  10: 6,255 ns/op

# Run progress: 44,44% complete, ETA 00:06:16
# Fork: 1 of 2
# Warmup Iteration   1: 9,094 ns/op
# Warmup Iteration   2: 6,831 ns/op
# Warmup Iteration   3: 6,089 ns/op
Iteration   1: 6,047 ns/op
Iteration   2: 6,230 ns/op
Iteration   3: 5,979 ns/op
Iteration   4: 6,610 ns/op
Iteration   5: 5,836 ns/op
Iteration   6: 6,124 ns/op
Iteration   7: 6,220 ns/op
Iteration   8: 6,202 ns/op
Iteration   9: 6,554 ns/op
Iteration  10: 6,702 ns/op

# Run progress: 55,56% complete, ETA 00:04:12
# Fork: 2 of 2
# Warmup Iteration   1: 10,626 ns/op
# Warmup Iteration   2: 7,232 ns/op
# Warmup Iteration   3: 6,007 ns/op
Iteration   1: 6,095 ns/op
Iteration   2: 5,791 ns/op
Iteration   3: 6,171 ns/op
Iteration   4: 5,739 ns/op
Iteration   5: 6,731 ns/op
Iteration   6: 6,693 ns/op
Iteration   7: 6,567 ns/op
Iteration   8: 6,030 ns/op
Iteration   9: 6,007 ns/op
Iteration  10: 6,048 ns/op


Result "ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertTenThousandRandomData":
  6,219 ±(99.9%) 0,274 ns/op [Average]
  (min, avg, max) = (5,739, 6,219, 6,731), stdev = 0,316
  CI (99.9%): [5,945, 6,493] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49570:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertThousandRandomData

# Run progress: 66,67% complete, ETA 00:02:45
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 9,039 ns/op
# Warmup Iteration   2: 7,379 ns/op
# Warmup Iteration   3: 6,690 ns/op
Iteration   1: 6,952 ns/op
Iteration   2: 6,580 ns/op
Iteration   3: 6,470 ns/op
Iteration   4: 6,173 ns/op
Iteration   5: 6,816 ns/op
Iteration   6: 6,015 ns/op
Iteration   7: 5,927 ns/op
Iteration   8: 6,277 ns/op
Iteration   9: 5,961 ns/op
Iteration  10: 6,041 ns/op

# Run progress: 77,78% complete, ETA 00:01:38
# Fork: 1 of 2
# Warmup Iteration   1: 8,853 ns/op
# Warmup Iteration   2: 6,679 ns/op
# Warmup Iteration   3: 6,014 ns/op
Iteration   1: 6,269 ns/op
Iteration   2: 6,006 ns/op
Iteration   3: 6,679 ns/op
Iteration   4: 6,089 ns/op
Iteration   5: 5,862 ns/op
Iteration   6: 6,322 ns/op
Iteration   7: 6,877 ns/op
Iteration   8: 6,905 ns/op
Iteration   9: 6,826 ns/op
Iteration  10: 6,315 ns/op

# Run progress: 88,89% complete, ETA 00:00:45
# Fork: 2 of 2
# Warmup Iteration   1: 10,462 ns/op
# Warmup Iteration   2: 6,879 ns/op
# Warmup Iteration   3: 6,115 ns/op
Iteration   1: 7,167 ns/op
Iteration   2: 6,980 ns/op
Iteration   3: 7,028 ns/op
Iteration   4: 6,854 ns/op
Iteration   5: 6,056 ns/op
Iteration   6: 6,102 ns/op
Iteration   7: 6,111 ns/op
Iteration   8: 6,331 ns/op
Iteration   9: 6,476 ns/op
Iteration  10: 6,524 ns/op


Result "ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertThousandRandomData":
  6,489 ±(99.9%) 0,345 ns/op [Average]
  (min, avg, max) = (5,862, 6,489, 7,167), stdev = 0,397
  CI (99.9%): [6,144, 6,834] (assumes normal distribution)


# Run complete. Total time: 00:06:15

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                           Mode  Cnt  Score   Error  Units
LSHBenchmarkRunner.insertHundredThousandRandomData  avgt   20  7,644 ± 0,804  ns/op
LSHBenchmarkRunner.insertTenThousandRandomData      avgt   20  6,219 ± 0,274  ns/op
LSHBenchmarkRunner.insertThousandRandomData         avgt   20  6,489 ± 0,345  ns/op

Process finished with exit code 0