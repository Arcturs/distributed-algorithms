/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=55745:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/a.sashina/IdeaProjects/distributed-algorithms/target/classes:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/a.sashina/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/a.sashina/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/Users/a.sashina/.m2/repository/org/jeasy/easy-random-core/5.0.0/easy-random-core-5.0.0.jar:/Users/a.sashina/.m2/repository/org/objenesis/objenesis/3.1/objenesis-3.1.jar:/Users/a.sashina/.m2/repository/io/github/classgraph/classgraph/4.8.90/classgraph-4.8.90.jar ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner
# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=55745:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertFiveHundredRandomData

# Run progress: 0,00% complete, ETA 00:01:57
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 59,493 ms/op
# Warmup Iteration   2: 50,895 ms/op
# Warmup Iteration   3: 46,076 ms/op
Iteration   1: 40,169 ms/op
Iteration   2: 38,150 ms/op
Iteration   3: 42,014 ms/op
Iteration   4: 41,331 ms/op
Iteration   5: 38,306 ms/op
Iteration   6: 40,316 ms/op
Iteration   7: 39,937 ms/op
Iteration   8: 40,075 ms/op
Iteration   9: 40,065 ms/op
Iteration  10: 39,794 ms/op

# Run progress: 11,11% complete, ETA 00:01:54
# Fork: 1 of 2
# Warmup Iteration   1: 87,181 ms/op
# Warmup Iteration   2: 37,371 ms/op
# Warmup Iteration   3: 36,913 ms/op
Iteration   1: 41,964 ms/op
Iteration   2: 40,955 ms/op
Iteration   3: 39,379 ms/op
Iteration   4: 37,043 ms/op
Iteration   5: 40,654 ms/op
Iteration   6: 39,559 ms/op
Iteration   7: 39,077 ms/op
Iteration   8: 38,893 ms/op
Iteration   9: 39,466 ms/op
Iteration  10: 42,394 ms/op

# Run progress: 22,22% complete, ETA 00:01:40
# Fork: 2 of 2
# Warmup Iteration   1: 96,322 ms/op
# Warmup Iteration   2: 46,137 ms/op
# Warmup Iteration   3: 39,016 ms/op
Iteration   1: 37,264 ms/op
Iteration   2: 38,652 ms/op
Iteration   3: 42,204 ms/op
Iteration   4: 43,407 ms/op
Iteration   5: 42,604 ms/op
Iteration   6: 40,939 ms/op
Iteration   7: 39,922 ms/op
Iteration   8: 40,934 ms/op
Iteration   9: 39,669 ms/op
Iteration  10: 42,380 ms/op


Result "ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertFiveHundredRandomData":
  40,368 ±(99.9%) 1,543 ms/op [Average]
  (min, avg, max) = (37,043, 40,368, 43,407), stdev = 1,777
  CI (99.9%): [38,825, 41,911] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=55745:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertSevenHundredRandomData

# Run progress: 33,33% complete, ETA 00:01:25
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 451,829 ms/op
# Warmup Iteration   2: 444,411 ms/op
# Warmup Iteration   3: 212,623 ms/op
Iteration   1: 194,991 ms/op
Iteration   2: 181,079 ms/op
Iteration   3: 195,353 ms/op
Iteration   4: 194,018 ms/op
Iteration   5: 206,396 ms/op
Iteration   6: 183,406 ms/op
Iteration   7: 213,282 ms/op
Iteration   8: 196,711 ms/op
Iteration   9: 175,841 ms/op
Iteration  10: 181,329 ms/op

# Run progress: 44,44% complete, ETA 00:01:13
# Fork: 1 of 2
# Warmup Iteration   1: 475,945 ms/op
# Warmup Iteration   2: 374,578 ms/op
# Warmup Iteration   3: 186,418 ms/op
Iteration   1: 184,573 ms/op
Iteration   2: 185,702 ms/op
Iteration   3: 168,265 ms/op
Iteration   4: 193,778 ms/op
Iteration   5: 193,358 ms/op
Iteration   6: 199,204 ms/op
Iteration   7: 185,041 ms/op
Iteration   8: 193,378 ms/op
Iteration   9: 184,084 ms/op
Iteration  10: 176,278 ms/op

# Run progress: 55,56% complete, ETA 00:00:59
# Fork: 2 of 2
# Warmup Iteration   1: 455,091 ms/op
# Warmup Iteration   2: 391,238 ms/op
# Warmup Iteration   3: 206,817 ms/op
Iteration   1: 201,766 ms/op
Iteration   2: 201,058 ms/op
Iteration   3: 191,173 ms/op
Iteration   4: 190,350 ms/op
Iteration   5: 204,389 ms/op
Iteration   6: 177,739 ms/op
Iteration   7: 193,012 ms/op
Iteration   8: 184,018 ms/op
Iteration   9: 184,133 ms/op
Iteration  10: 194,896 ms/op


Result "ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertSevenHundredRandomData":
  189,310 ±(99.9%) 7,976 ms/op [Average]
  (min, avg, max) = (168,265, 189,310, 204,389), stdev = 9,186
  CI (99.9%): [181,333, 197,286] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=55745:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertTwoHundredRandomData

# Run progress: 66,67% complete, ETA 00:00:45
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 86,704 ms/op
# Warmup Iteration   2: 41,332 ms/op
# Warmup Iteration   3: 36,778 ms/op
Iteration   1: 46,080 ms/op
Iteration   2: 39,268 ms/op
Iteration   3: 41,123 ms/op
Iteration   4: 40,940 ms/op
Iteration   5: 44,711 ms/op
Iteration   6: 39,679 ms/op
Iteration   7: 40,564 ms/op
Iteration   8: 39,586 ms/op
Iteration   9: 41,422 ms/op
Iteration  10: 38,239 ms/op

# Run progress: 77,78% complete, ETA 00:00:29
# Fork: 1 of 2
# Warmup Iteration   1: 69,671 ms/op
# Warmup Iteration   2: 41,252 ms/op
# Warmup Iteration   3: 64,541 ms/op
Iteration   1: 46,868 ms/op
Iteration   2: 42,157 ms/op
Iteration   3: 41,252 ms/op
Iteration   4: 41,822 ms/op
Iteration   5: 41,408 ms/op
Iteration   6: 44,255 ms/op
Iteration   7: 41,160 ms/op
Iteration   8: 39,654 ms/op
Iteration   9: 36,692 ms/op
Iteration  10: 36,639 ms/op

# Run progress: 88,89% complete, ETA 00:00:14
# Fork: 2 of 2
# Warmup Iteration   1: 93,717 ms/op
# Warmup Iteration   2: 38,605 ms/op
# Warmup Iteration   3: 44,256 ms/op
Iteration   1: 41,780 ms/op
Iteration   2: 40,698 ms/op
Iteration   3: 44,998 ms/op
Iteration   4: 39,224 ms/op
Iteration   5: 38,518 ms/op
Iteration   6: 42,149 ms/op
Iteration   7: 40,075 ms/op
Iteration   8: 42,465 ms/op
Iteration   9: 41,894 ms/op
Iteration  10: 40,081 ms/op


Result "ru.spb.itmo.asashina.lab1.lsh.LSHBenchmarkRunner.insertTwoHundredRandomData":
  41,189 ±(99.9%) 2,163 ms/op [Average]
  (min, avg, max) = (36,639, 41,189, 46,868), stdev = 2,491
  CI (99.9%): [39,026, 43,353] (assumes normal distribution)


# Run complete. Total time: 00:02:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                        Mode  Cnt    Score   Error  Units
LSHBenchmarkRunner.insertFiveHundredRandomData   avgt   20   40,368 ± 1,543  ms/op
LSHBenchmarkRunner.insertSevenHundredRandomData  avgt   20  189,310 ± 7,976  ms/op
LSHBenchmarkRunner.insertTwoHundredRandomData    avgt   20   41,189 ± 2,163  ms/op

Process finished with exit code 0