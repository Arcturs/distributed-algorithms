/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57882:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/a.sashina/IdeaProjects/distributed-algorithms/target/classes:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/a.sashina/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/a.sashina/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/a.sashina/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/Users/a.sashina/.m2/repository/org/jeasy/easy-random-core/5.0.0/easy-random-core-5.0.0.jar:/Users/a.sashina/.m2/repository/org/objenesis/objenesis/3.1/objenesis-3.1.jar:/Users/a.sashina/.m2/repository/io/github/classgraph/classgraph/4.8.90/classgraph-4.8.90.jar ru.spb.itmo.asashina.lab1.perf.hash.GetValueBenchmarkRunner
# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57882:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.perf.hash.GetValueBenchmarkRunner.getMillionRandomData

# Run progress: 0,00% complete, ETA 00:01:57
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 490,330 ms/op
# Warmup Iteration   2: 451,767 ms/op
# Warmup Iteration   3: 429,556 ms/op
Iteration   1: 470,006 ms/op
Iteration   2: 427,678 ms/op
Iteration   3: 411,641 ms/op
Iteration   4: 384,493 ms/op
Iteration   5: 480,085 ms/op
Iteration   6: 382,501 ms/op
Iteration   7: 474,622 ms/op
Iteration   8: 575,967 ms/op
Iteration   9: 526,957 ms/op
Iteration  10: 435,258 ms/op

# Run progress: 11,11% complete, ETA 00:05:20
# Fork: 1 of 2
# Warmup Iteration   1: 523,048 ms/op
# Warmup Iteration   2: 471,401 ms/op
# Warmup Iteration   3: 450,629 ms/op
Iteration   1: 508,270 ms/op
Iteration   2: 411,267 ms/op
Iteration   3: 463,728 ms/op
Iteration   4: 409,609 ms/op
Iteration   5: 476,337 ms/op
Iteration   6: 439,349 ms/op
Iteration   7: 444,941 ms/op
Iteration   8: 461,503 ms/op
Iteration   9: 485,850 ms/op
Iteration  10: 454,129 ms/op

# Run progress: 22,22% complete, ETA 00:04:41
# Fork: 2 of 2
# Warmup Iteration   1: 517,211 ms/op
# Warmup Iteration   2: 378,049 ms/op
# Warmup Iteration   3: 468,474 ms/op
Iteration   1: 464,647 ms/op
Iteration   2: 468,220 ms/op
Iteration   3: 488,128 ms/op
Iteration   4: 504,679 ms/op
Iteration   5: 490,650 ms/op
Iteration   6: 507,948 ms/op
Iteration   7: 496,783 ms/op
Iteration   8: 477,971 ms/op
Iteration   9: 472,029 ms/op
Iteration  10: 525,223 ms/op


Result "ru.spb.itmo.asashina.lab1.perf.hash.GetValueBenchmarkRunner.getMillionRandomData":
  472,563 ±(99.9%) 26,665 ms/op [Average]
  (min, avg, max) = (409,609, 472,563, 525,223), stdev = 30,708
  CI (99.9%): [445,898, 499,228] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57882:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.perf.hash.GetValueBenchmarkRunner.getSevenHundredThousandRandomData

# Run progress: 33,33% complete, ETA 00:04:01
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 97,772 ms/op
# Warmup Iteration   2: 75,784 ms/op
# Warmup Iteration   3: 72,587 ms/op
Iteration   1: 109,629 ms/op
Iteration   2: 64,083 ms/op
Iteration   3: 111,690 ms/op
Iteration   4: 100,093 ms/op
Iteration   5: 90,829 ms/op
Iteration   6: 93,303 ms/op
Iteration   7: 105,244 ms/op
Iteration   8: 98,014 ms/op
Iteration   9: 110,622 ms/op
Iteration  10: 110,161 ms/op

# Run progress: 44,44% complete, ETA 00:02:55
# Fork: 1 of 2
# Warmup Iteration   1: 92,439 ms/op
# Warmup Iteration   2: 78,928 ms/op
# Warmup Iteration   3: 95,804 ms/op
Iteration   1: 61,776 ms/op
Iteration   2: 92,123 ms/op
Iteration   3: 101,445 ms/op
Iteration   4: 117,534 ms/op
Iteration   5: 91,917 ms/op
Iteration   6: 94,236 ms/op
Iteration   7: 111,622 ms/op
Iteration   8: 94,541 ms/op
Iteration   9: 110,670 ms/op
Iteration  10: 91,707 ms/op

# Run progress: 55,56% complete, ETA 00:02:07
# Fork: 2 of 2
# Warmup Iteration   1: 94,021 ms/op
# Warmup Iteration   2: 75,437 ms/op
# Warmup Iteration   3: 93,379 ms/op
Iteration   1: 89,432 ms/op
Iteration   2: 82,040 ms/op
Iteration   3: 92,556 ms/op
Iteration   4: 95,115 ms/op
Iteration   5: 92,576 ms/op
Iteration   6: 110,904 ms/op
Iteration   7: 84,999 ms/op
Iteration   8: 77,114 ms/op
Iteration   9: 89,368 ms/op
Iteration  10: 111,206 ms/op


Result "ru.spb.itmo.asashina.lab1.perf.hash.GetValueBenchmarkRunner.getSevenHundredThousandRandomData":
  94,644 ±(99.9%) 11,582 ms/op [Average]
  (min, avg, max) = (61,776, 94,644, 117,534), stdev = 13,338
  CI (99.9%): [83,062, 106,226] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57882:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab1.perf.hash.GetValueBenchmarkRunner.getTwoHundredThousandRandomData

# Run progress: 66,67% complete, ETA 00:01:29
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 94,015 ms/op
# Warmup Iteration   2: 73,450 ms/op
# Warmup Iteration   3: 65,377 ms/op
Iteration   1: 88,441 ms/op
Iteration   2: 91,463 ms/op
Iteration   3: 82,367 ms/op
Iteration   4: 89,631 ms/op
Iteration   5: 91,236 ms/op
Iteration   6: 114,029 ms/op
Iteration   7: 102,402 ms/op
Iteration   8: 106,876 ms/op
Iteration   9: 103,594 ms/op
Iteration  10: 80,087 ms/op

# Run progress: 77,78% complete, ETA 00:00:56
# Fork: 1 of 2
# Warmup Iteration   1: 92,691 ms/op
# Warmup Iteration   2: 91,081 ms/op
# Warmup Iteration   3: 113,333 ms/op
Iteration   1: 107,314 ms/op
Iteration   2: 87,656 ms/op
Iteration   3: 73,926 ms/op
Iteration   4: 73,143 ms/op
Iteration   5: 84,653 ms/op
Iteration   6: 91,457 ms/op
Iteration   7: 110,647 ms/op
Iteration   8: 92,028 ms/op
Iteration   9: 113,045 ms/op
Iteration  10: 97,836 ms/op

# Run progress: 88,89% complete, ETA 00:00:27
# Fork: 2 of 2
# Warmup Iteration   1: 90,970 ms/op
# Warmup Iteration   2: 87,898 ms/op
# Warmup Iteration   3: 112,102 ms/op
Iteration   1: 96,798 ms/op
Iteration   2: 85,839 ms/op
Iteration   3: 83,178 ms/op
Iteration   4: 86,264 ms/op
Iteration   5: 84,244 ms/op
Iteration   6: 82,710 ms/op
Iteration   7: 85,993 ms/op
Iteration   8: 114,620 ms/op
Iteration   9: 89,248 ms/op
Iteration  10: 95,147 ms/op


Result "ru.spb.itmo.asashina.lab1.perf.hash.GetValueBenchmarkRunner.getTwoHundredThousandRandomData":
  91,787 ±(99.9%) 10,346 ms/op [Average]
  (min, avg, max) = (73,143, 91,787, 114,620), stdev = 11,914
  CI (99.9%): [81,441, 102,133] (assumes normal distribution)


# Run complete. Total time: 00:03:55

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                  Mode  Cnt    Score    Error  Units
GetValueBenchmarkRunner.getMillionRandomData               avgt   20  472,563 ± 26,665  ms/op
GetValueBenchmarkRunner.getSevenHundredThousandRandomData  avgt   20   94,644 ± 11,582  ms/op
GetValueBenchmarkRunner.getTwoHundredThousandRandomData    avgt   20   91,787 ± 10,346  ms/op

Process finished with exit code 0