/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49615 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /Users/anastasiasasina/IdeaProjects/distributed-algorithms/target/classes:/Users/anastasiasasina/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/anastasiasasina/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/anastasiasasina/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/anastasiasasina/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/Users/anastasiasasina/.m2/repository/org/jeasy/easy-random-core/5.0.0/easy-random-core-5.0.0.jar:/Users/anastasiasasina/.m2/repository/org/objenesis/objenesis/3.1/objenesis-3.1.jar:/Users/anastasiasasina/.m2/repository/io/github/classgraph/classgraph/4.8.90/classgraph-4.8.90.jar:/Users/anastasiasasina/.m2/repository/commons-io/commons-io/2.17.0/commons-io-2.17.0.jar:/Users/anastasiasasina/.m2/repository/org/apache/lucene/lucene-core/10.2.0/lucene-core-10.2.0.jar:/Users/anastasiasasina/.m2/repository/org/apache/lucene/lucene-queryparser/10.2.0/lucene-queryparser-10.2.0.jar:/Users/anastasiasasina/.m2/repository/org/apache/lucene/lucene-queries/10.2.0/lucene-queries-10.2.0.jar:/Users/anastasiasasina/.m2/repository/org/apache/lucene/lucene-sandbox/10.2.0/lucene-sandbox-10.2.0.jar:/Users/anastasiasasina/.m2/repository/org/apache/lucene/lucene-facet/10.2.0/lucene-facet-10.2.0.jar:/Users/anastasiasasina/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.4/spring-boot-starter-3.4.4.jar:/Users/anastasiasasina/.m2/repository/org/springframework/boot/spring-boot/3.4.4/spring-boot-3.4.4.jar:/Users/anastasiasasina/.m2/repository/org/springframework/spring-context/6.2.5/spring-context-6.2.5.jar:/Users/anastasiasasina/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.4/spring-boot-autoconfigure-3.4.4.jar:/Users/anastasiasasina/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.4/spring-boot-starter-logging-3.4.4.jar:/Users/anastasiasasina/.m2/repository/ch/qos/logback/logback-classic/1.5.18/logback-classic-1.5.18.jar:/Users/anastasiasasina/.m2/repository/ch/qos/logback/logback-core/1.5.18/logback-core-1.5.18.jar:/Users/anastasiasasina/.m2/repository/org/slf4j/slf4j-api/2.0.17/slf4j-api-2.0.17.jar:/Users/anastasiasasina/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/Users/anastasiasasina/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/Users/anastasiasasina/.m2/repository/org/slf4j/jul-to-slf4j/2.0.17/jul-to-slf4j-2.0.17.jar:/Users/anastasiasasina/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/anastasiasasina/.m2/repository/org/springframework/spring-core/6.2.5/spring-core-6.2.5.jar:/Users/anastasiasasina/.m2/repository/org/springframework/spring-jcl/6.2.5/spring-jcl-6.2.5.jar:/Users/anastasiasasina/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/Users/anastasiasasina/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.4/spring-boot-starter-web-3.4.4.jar:/Users/anastasiasasina/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.4/spring-boot-starter-json-3.4.4.jar:/Users/anastasiasasina/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.3/jackson-databind-2.18.3.jar:/Users/anastasiasasina/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.3/jackson-annotations-2.18.3.jar:/Users/anastasiasasina/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.3/jackson-core-2.18.3.jar:/Users/anastasiasasina/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.3/jackson-datatype-jdk8-2.18.3.jar:/Users/anastasiasasina/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.3/jackson-datatype-jsr310-2.18.3.jar:/Users/anastasiasasina/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.3/jackson-module-parameter-names-2.18.3.jar:/Users/anastasiasasina/.m2/repository/org/springframework/spring-web/6.2.5/spring-web-6.2.5.jar:/Users/anastasiasasina/.m2/repository/org/springframework/spring-beans/6.2.5/spring-beans-6.2.5.jar:/Users/anastasiasasina/.m2/repository/io/micrometer/micrometer-observation/1.14.5/micrometer-observation-1.14.5.jar:/Users/anastasiasasina/.m2/repository/io/micrometer/micrometer-commons/1.14.5/micrometer-commons-1.14.5.jar:/Users/anastasiasasina/.m2/repository/org/springframework/spring-webmvc/6.2.5/spring-webmvc-6.2.5.jar:/Users/anastasiasasina/.m2/repository/org/springframework/spring-aop/6.2.5/spring-aop-6.2.5.jar:/Users/anastasiasasina/.m2/repository/org/springframework/spring-expression/6.2.5/spring-expression-6.2.5.jar:/Users/anastasiasasina/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.4/spring-boot-starter-tomcat-3.4.4.jar:/Users/anastasiasasina/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.39/tomcat-embed-core-10.1.39.jar:/Users/anastasiasasina/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.39/tomcat-embed-el-10.1.39.jar:/Users/anastasiasasina/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.39/tomcat-embed-websocket-10.1.39.jar ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner
# JMH version: 1.37
# VM version: JDK 23.0.2, OpenJDK 64-Bit Server VM, 23.0.2
# VM invoker: /opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49615 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextFiveHundredLetter

# Run progress: 0,00% complete, ETA 00:03:15
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0,002 ms/op
# Warmup Iteration   2: 0,002 ms/op
# Warmup Iteration   3: 0,002 ms/op
Iteration   1: 0,002 ms/op
Iteration   2: 0,002 ms/op
Iteration   3: 0,002 ms/op
Iteration   4: 0,002 ms/op
Iteration   5: 0,002 ms/op
Iteration   6: 0,002 ms/op
Iteration   7: 0,002 ms/op
Iteration   8: 0,002 ms/op
Iteration   9: 0,002 ms/op
Iteration  10: 0,002 ms/op

# Run progress: 6,67% complete, ETA 00:03:11
# Fork: 1 of 2
# Warmup Iteration   1: 0,002 ms/op
# Warmup Iteration   2: 0,002 ms/op
# Warmup Iteration   3: 0,002 ms/op
Iteration   1: 0,002 ms/op
Iteration   2: 0,002 ms/op
Iteration   3: 0,002 ms/op
Iteration   4: 0,002 ms/op
Iteration   5: 0,002 ms/op
Iteration   6: 0,002 ms/op
Iteration   7: 0,002 ms/op
Iteration   8: 0,002 ms/op
Iteration   9: 0,002 ms/op
Iteration  10: 0,002 ms/op

# Run progress: 13,33% complete, ETA 00:02:57
# Fork: 2 of 2
# Warmup Iteration   1: 0,002 ms/op
# Warmup Iteration   2: 0,002 ms/op
# Warmup Iteration   3: 0,002 ms/op
Iteration   1: 0,002 ms/op
Iteration   2: 0,002 ms/op
Iteration   3: 0,002 ms/op
Iteration   4: 0,002 ms/op
Iteration   5: 0,002 ms/op
Iteration   6: 0,002 ms/op
Iteration   7: 0,002 ms/op
Iteration   8: 0,002 ms/op
Iteration   9: 0,002 ms/op
Iteration  10: 0,002 ms/op


Result "ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextFiveHundredLetter":
  0,002 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,002, 0,002, 0,002), stdev = 0,001
  CI (99.9%): [0,002, 0,002] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 23.0.2, OpenJDK 64-Bit Server VM, 23.0.2
# VM invoker: /opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49615 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextFiveThousandLetter

# Run progress: 20,00% complete, ETA 00:02:44
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0,028 ms/op
# Warmup Iteration   2: 0,026 ms/op
# Warmup Iteration   3: 0,027 ms/op
Iteration   1: 0,027 ms/op
Iteration   2: 0,027 ms/op
Iteration   3: 0,027 ms/op
Iteration   4: 0,027 ms/op
Iteration   5: 0,027 ms/op
Iteration   6: 0,027 ms/op
Iteration   7: 0,027 ms/op
Iteration   8: 0,027 ms/op
Iteration   9: 0,027 ms/op
Iteration  10: 0,027 ms/op

# Run progress: 26,67% complete, ETA 00:02:39
# Fork: 1 of 2
# Warmup Iteration   1: 0,024 ms/op
# Warmup Iteration   2: 0,023 ms/op
# Warmup Iteration   3: 0,023 ms/op
Iteration   1: 0,023 ms/op
Iteration   2: 0,023 ms/op
Iteration   3: 0,024 ms/op
Iteration   4: 0,024 ms/op
Iteration   5: 0,023 ms/op
Iteration   6: 0,023 ms/op
Iteration   7: 0,024 ms/op
Iteration   8: 0,023 ms/op
Iteration   9: 0,023 ms/op
Iteration  10: 0,024 ms/op

# Run progress: 33,33% complete, ETA 00:02:28
# Fork: 2 of 2
# Warmup Iteration   1: 0,025 ms/op
# Warmup Iteration   2: 0,023 ms/op
# Warmup Iteration   3: 0,023 ms/op
Iteration   1: 0,023 ms/op
Iteration   2: 0,023 ms/op
Iteration   3: 0,023 ms/op
Iteration   4: 0,024 ms/op
Iteration   5: 0,024 ms/op
Iteration   6: 0,024 ms/op
Iteration   7: 0,023 ms/op
Iteration   8: 0,023 ms/op
Iteration   9: 0,023 ms/op
Iteration  10: 0,023 ms/op


Result "ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextFiveThousandLetter":
  0,023 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,023, 0,023, 0,024), stdev = 0,001
  CI (99.9%): [0,023, 0,024] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 23.0.2, OpenJDK 64-Bit Server VM, 23.0.2
# VM invoker: /opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49615 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextOneHundredLetter

# Run progress: 40,00% complete, ETA 00:02:15
# Warmup Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻³ ms/op
# Warmup Iteration   2: ≈ 10⁻³ ms/op
# Warmup Iteration   3: ≈ 10⁻³ ms/op
Iteration   1: ≈ 10⁻³ ms/op
Iteration   2: ≈ 10⁻³ ms/op
Iteration   3: ≈ 10⁻³ ms/op
Iteration   4: ≈ 10⁻³ ms/op
Iteration   5: ≈ 10⁻³ ms/op
Iteration   6: ≈ 10⁻³ ms/op
Iteration   7: ≈ 10⁻³ ms/op
Iteration   8: ≈ 10⁻³ ms/op
Iteration   9: ≈ 10⁻³ ms/op
Iteration  10: ≈ 10⁻³ ms/op

# Run progress: 46,67% complete, ETA 00:01:58
# Fork: 1 of 2
# Warmup Iteration   1: ≈ 10⁻³ ms/op
# Warmup Iteration   2: ≈ 10⁻³ ms/op
# Warmup Iteration   3: ≈ 10⁻³ ms/op
Iteration   1: ≈ 10⁻³ ms/op
Iteration   2: ≈ 10⁻³ ms/op
Iteration   3: ≈ 10⁻³ ms/op
Iteration   4: ≈ 10⁻³ ms/op
Iteration   5: ≈ 10⁻³ ms/op
Iteration   6: ≈ 10⁻³ ms/op
Iteration   7: ≈ 10⁻³ ms/op
Iteration   8: ≈ 10⁻³ ms/op
Iteration   9: ≈ 10⁻³ ms/op
Iteration  10: ≈ 10⁻³ ms/op

# Run progress: 53,33% complete, ETA 00:01:42
# Fork: 2 of 2
# Warmup Iteration   1: ≈ 10⁻³ ms/op
# Warmup Iteration   2: ≈ 10⁻³ ms/op
# Warmup Iteration   3: ≈ 10⁻³ ms/op
Iteration   1: ≈ 10⁻³ ms/op
Iteration   2: ≈ 10⁻³ ms/op
Iteration   3: ≈ 10⁻³ ms/op
Iteration   4: ≈ 10⁻³ ms/op
Iteration   5: ≈ 10⁻³ ms/op
Iteration   6: ≈ 10⁻³ ms/op
Iteration   7: ≈ 10⁻³ ms/op
Iteration   8: ≈ 10⁻³ ms/op
Iteration   9: ≈ 10⁻³ ms/op
Iteration  10: ≈ 10⁻³ ms/op


Result "ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextOneHundredLetter":
  ≈ 10⁻³ ms/op


# JMH version: 1.37
# VM version: JDK 23.0.2, OpenJDK 64-Bit Server VM, 23.0.2
# VM invoker: /opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49615 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextOneLetter

# Run progress: 60,00% complete, ETA 00:01:27
# Warmup Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁵ ms/op
# Warmup Iteration   2: ≈ 10⁻⁵ ms/op
# Warmup Iteration   3: ≈ 10⁻⁵ ms/op
Iteration   1: ≈ 10⁻⁵ ms/op
Iteration   2: ≈ 10⁻⁵ ms/op
Iteration   3: ≈ 10⁻⁵ ms/op
Iteration   4: ≈ 10⁻⁵ ms/op
Iteration   5: ≈ 10⁻⁵ ms/op
Iteration   6: ≈ 10⁻⁵ ms/op
Iteration   7: ≈ 10⁻⁵ ms/op
Iteration   8: ≈ 10⁻⁵ ms/op
Iteration   9: ≈ 10⁻⁵ ms/op
Iteration  10: ≈ 10⁻⁵ ms/op

# Run progress: 66,67% complete, ETA 00:01:12
# Fork: 1 of 2
# Warmup Iteration   1: ≈ 10⁻⁵ ms/op
# Warmup Iteration   2: ≈ 10⁻⁵ ms/op
# Warmup Iteration   3: ≈ 10⁻⁵ ms/op
Iteration   1: ≈ 10⁻⁵ ms/op
Iteration   2: ≈ 10⁻⁵ ms/op
Iteration   3: ≈ 10⁻⁵ ms/op
Iteration   4: ≈ 10⁻⁵ ms/op
Iteration   5: ≈ 10⁻⁵ ms/op
Iteration   6: ≈ 10⁻⁵ ms/op
Iteration   7: ≈ 10⁻⁵ ms/op
Iteration   8: ≈ 10⁻⁵ ms/op
Iteration   9: ≈ 10⁻⁵ ms/op
Iteration  10: ≈ 10⁻⁵ ms/op

# Run progress: 73,33% complete, ETA 00:00:57
# Fork: 2 of 2
# Warmup Iteration   1: ≈ 10⁻⁵ ms/op
# Warmup Iteration   2: ≈ 10⁻⁵ ms/op
# Warmup Iteration   3: ≈ 10⁻⁵ ms/op
Iteration   1: ≈ 10⁻⁵ ms/op
Iteration   2: ≈ 10⁻⁵ ms/op
Iteration   3: ≈ 10⁻⁵ ms/op
Iteration   4: ≈ 10⁻⁵ ms/op
Iteration   5: ≈ 10⁻⁵ ms/op
Iteration   6: ≈ 10⁻⁵ ms/op
Iteration   7: ≈ 10⁻⁵ ms/op
Iteration   8: ≈ 10⁻⁵ ms/op
Iteration   9: ≈ 10⁻⁵ ms/op
Iteration  10: ≈ 10⁻⁵ ms/op


Result "ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextOneLetter":
  ≈ 10⁻⁵ ms/op


# JMH version: 1.37
# VM version: JDK 23.0.2, OpenJDK 64-Bit Server VM, 23.0.2
# VM invoker: /opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49615 -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextOneThousandLetter

# Run progress: 80,00% complete, ETA 00:00:43
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0,004 ms/op
# Warmup Iteration   2: 0,004 ms/op
# Warmup Iteration   3: 0,004 ms/op
Iteration   1: 0,004 ms/op
Iteration   2: 0,004 ms/op
Iteration   3: 0,004 ms/op
Iteration   4: 0,004 ms/op
Iteration   5: 0,004 ms/op
Iteration   6: 0,004 ms/op
Iteration   7: 0,004 ms/op
Iteration   8: 0,004 ms/op
Iteration   9: 0,004 ms/op
Iteration  10: 0,004 ms/op

# Run progress: 86,67% complete, ETA 00:00:28
# Fork: 1 of 2
# Warmup Iteration   1: 0,004 ms/op
# Warmup Iteration   2: 0,004 ms/op
# Warmup Iteration   3: 0,004 ms/op
Iteration   1: 0,004 ms/op
Iteration   2: 0,004 ms/op
Iteration   3: 0,004 ms/op
Iteration   4: 0,004 ms/op
Iteration   5: 0,004 ms/op
Iteration   6: 0,004 ms/op
Iteration   7: 0,004 ms/op
Iteration   8: 0,004 ms/op
Iteration   9: 0,004 ms/op
Iteration  10: 0,004 ms/op

# Run progress: 93,33% complete, ETA 00:00:14
# Fork: 2 of 2
# Warmup Iteration   1: 0,004 ms/op
# Warmup Iteration   2: 0,004 ms/op
# Warmup Iteration   3: 0,004 ms/op
Iteration   1: 0,004 ms/op
Iteration   2: 0,004 ms/op
Iteration   3: 0,004 ms/op
Iteration   4: 0,004 ms/op
Iteration   5: 0,004 ms/op
Iteration   6: 0,004 ms/op
Iteration   7: 0,004 ms/op
Iteration   8: 0,004 ms/op
Iteration   9: 0,004 ms/op
Iteration  10: 0,004 ms/op


Result "ru.spb.itmo.asashina.lab4.RGAGetTextBenchmarkRunner.getTextOneThousandLetter":
  0,004 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,004, 0,004, 0,004), stdev = 0,001
  CI (99.9%): [0,004, 0,004] (assumes normal distribution)


# Run complete. Total time: 00:03:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                            Mode  Cnt   Score    Error  Units
RGAGetTextBenchmarkRunner.getTextFiveHundredLetter   avgt   20   0,002 ±  0,001  ms/op
RGAGetTextBenchmarkRunner.getTextFiveThousandLetter  avgt   20   0,023 ±  0,001  ms/op
RGAGetTextBenchmarkRunner.getTextOneHundredLetter    avgt   20  ≈ 10⁻³           ms/op
RGAGetTextBenchmarkRunner.getTextOneLetter           avgt   20  ≈ 10⁻⁵           ms/op
RGAGetTextBenchmarkRunner.getTextOneThousandLetter   avgt   20   0,004 ±  0,001  ms/op

Process finished with exit code 0
